use_sim_time: true
carla:
  # the network connection for the python connection to CARLA

  # Host/port: the network settings to connect to CARLA using a Python client.

  host: localhost
  port: 2000


  # enable/disable synchronous mode. If enabled ros-bridge waits until
  # expected data is received for all sensors

  # Synchronous mode:
  # If false (default): data is published on every world.on_tick() and every sensor.listen() callbacks.
  # If true: the bridge waits for all the sensor messages expected before the next tick. This might slow down 
  # the overall simulation but ensures reproducible results.

  synchronous_mode: false
  # within synchronous mode: wait for a vehicle control command before next tick?


  synchronous_mode_wait_for_vehicle_control_command: true
  # set the fixed timestep length
  fixed_delta_seconds: 0.05
  # configuration values for the ego vehicle
  ego_vehicle:
    # the role name of the vehicles that acts as ego vehicle for this ros bridge instance
    # Only the vehicles within this list are controllable from within ROS.
    # (the vehicle from CARLA is selected which has the attribute 'role_name' set to this value)
    role_name: ["hero", "ego_vehicle"]
